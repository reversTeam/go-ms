// Code generated by protoc-gen-go. DO NOT EDIT.
// source: services/goms/protobuf/goms.proto

package go_micro_service_goms

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GoMsResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=Message,json=message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoMsResponse) Reset()         { *m = GoMsResponse{} }
func (m *GoMsResponse) String() string { return proto.CompactTextString(m) }
func (*GoMsResponse) ProtoMessage()    {}
func (*GoMsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe07df61a259123c, []int{0}
}

func (m *GoMsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoMsResponse.Unmarshal(m, b)
}
func (m *GoMsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoMsResponse.Marshal(b, m, deterministic)
}
func (m *GoMsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoMsResponse.Merge(m, src)
}
func (m *GoMsResponse) XXX_Size() int {
	return xxx_messageInfo_GoMsResponse.Size(m)
}
func (m *GoMsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GoMsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GoMsResponse proto.InternalMessageInfo

func (m *GoMsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GoMsEntityRequest struct {
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoMsEntityRequest) Reset()         { *m = GoMsEntityRequest{} }
func (m *GoMsEntityRequest) String() string { return proto.CompactTextString(m) }
func (*GoMsEntityRequest) ProtoMessage()    {}
func (*GoMsEntityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fe07df61a259123c, []int{1}
}

func (m *GoMsEntityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoMsEntityRequest.Unmarshal(m, b)
}
func (m *GoMsEntityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoMsEntityRequest.Marshal(b, m, deterministic)
}
func (m *GoMsEntityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoMsEntityRequest.Merge(m, src)
}
func (m *GoMsEntityRequest) XXX_Size() int {
	return xxx_messageInfo_GoMsEntityRequest.Size(m)
}
func (m *GoMsEntityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GoMsEntityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GoMsEntityRequest proto.InternalMessageInfo

func (m *GoMsEntityRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*GoMsResponse)(nil), "go.micro.service.goms.GoMsResponse")
	proto.RegisterType((*GoMsEntityRequest)(nil), "go.micro.service.goms.GoMsEntityRequest")
}

func init() { proto.RegisterFile("services/goms/protobuf/goms.proto", fileDescriptor_fe07df61a259123c) }

var fileDescriptor_fe07df61a259123c = []byte{
	// 313 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x91, 0xcf, 0x4a, 0xf3, 0x40,
	0x14, 0xc5, 0x69, 0xda, 0x2f, 0xe1, 0xbb, 0xd4, 0x7f, 0x17, 0x2a, 0x21, 0xba, 0xd0, 0x74, 0x13,
	0xba, 0x98, 0x40, 0xdd, 0xb9, 0xd5, 0xd2, 0x8d, 0xdd, 0x04, 0xc4, 0x75, 0xda, 0x5c, 0xe3, 0x60,
	0x33, 0x13, 0x33, 0x53, 0xa1, 0x88, 0x1b, 0x5f, 0xc1, 0x47, 0xf3, 0x15, 0x7c, 0x0a, 0x57, 0x32,
	0x93, 0x28, 0x11, 0x44, 0x04, 0xbb, 0xbc, 0x9c, 0x73, 0xcf, 0x6f, 0xce, 0x5c, 0x38, 0x56, 0x54,
	0xdd, 0xf3, 0x05, 0xa9, 0x38, 0x97, 0x85, 0x8a, 0xcb, 0x4a, 0x6a, 0x39, 0x5f, 0x5d, 0xdb, 0x89,
	0xd9, 0x09, 0x07, 0xb9, 0x64, 0x05, 0x5f, 0x54, 0x92, 0x35, 0x5e, 0x66, 0xc4, 0xe0, 0x30, 0x97,
	0x32, 0x5f, 0x52, 0x9c, 0x96, 0x3c, 0x4e, 0x85, 0x90, 0x3a, 0xd5, 0x5c, 0x8a, 0x66, 0x29, 0x38,
	0x68, 0xd4, 0xcf, 0x40, 0x2a, 0x4a, 0xbd, 0xae, 0xc5, 0x30, 0x82, 0xfe, 0x54, 0xce, 0x54, 0x42,
	0xaa, 0x94, 0x42, 0x11, 0xfa, 0xe0, 0xcd, 0x48, 0xa9, 0x34, 0x27, 0xbf, 0x73, 0xd4, 0x89, 0xfe,
	0x27, 0x5e, 0x51, 0x8f, 0xe1, 0x10, 0xf6, 0x8c, 0x73, 0x22, 0x34, 0xd7, 0xeb, 0x84, 0xee, 0x56,
	0xa4, 0x34, 0x6e, 0x83, 0xc3, 0x33, 0xdf, 0xb1, 0x4e, 0x87, 0x67, 0xe3, 0xb7, 0x2e, 0xf4, 0x8c,
	0x0b, 0x13, 0xe8, 0x5d, 0x70, 0xa5, 0x71, 0x9f, 0xd5, 0x74, 0xf6, 0x41, 0x67, 0x13, 0x43, 0x0f,
	0x86, 0xec, 0xdb, 0x2a, 0xac, 0xfd, 0x98, 0x70, 0xeb, 0xe9, 0xe5, 0xf5, 0xd9, 0xf1, 0xf0, 0x9f,
	0xfd, 0x03, 0xbc, 0x02, 0xf7, 0xac, 0xa2, 0x54, 0xd3, 0xdf, 0x52, 0x77, 0x6d, 0x2a, 0x84, 0x75,
	0xea, 0x69, 0x67, 0x84, 0x37, 0xd0, 0x9d, 0x92, 0xc6, 0xe8, 0x87, 0xed, 0x2f, 0xb5, 0x7f, 0xc7,
	0x41, 0xcb, 0xe9, 0x23, 0xd4, 0xf7, 0x7c, 0xe0, 0xd9, 0x23, 0x0a, 0x70, 0x2f, 0xcb, 0xcc, 0x54,
	0xd8, 0x30, 0x6c, 0x60, 0x61, 0x3b, 0xe3, 0x16, 0xcc, 0x34, 0xbb, 0x05, 0xf7, 0x9c, 0x96, 0xb4,
	0x79, 0x5e, 0x53, 0x6e, 0xd4, 0xe2, 0xcd, 0x5d, 0x7b, 0x8d, 0x93, 0xf7, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xab, 0xa7, 0x5c, 0x54, 0xc9, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GoMsClient is the client API for GoMs service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GoMsClient interface {
	List(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GoMsResponse, error)
	Create(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GoMsResponse, error)
	Get(ctx context.Context, in *GoMsEntityRequest, opts ...grpc.CallOption) (*GoMsResponse, error)
	Update(ctx context.Context, in *GoMsEntityRequest, opts ...grpc.CallOption) (*GoMsResponse, error)
	Delete(ctx context.Context, in *GoMsEntityRequest, opts ...grpc.CallOption) (*GoMsResponse, error)
}

type goMsClient struct {
	cc *grpc.ClientConn
}

func NewGoMsClient(cc *grpc.ClientConn) GoMsClient {
	return &goMsClient{cc}
}

func (c *goMsClient) List(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GoMsResponse, error) {
	out := new(GoMsResponse)
	err := c.cc.Invoke(ctx, "/go.micro.service.goms.GoMs/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goMsClient) Create(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GoMsResponse, error) {
	out := new(GoMsResponse)
	err := c.cc.Invoke(ctx, "/go.micro.service.goms.GoMs/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goMsClient) Get(ctx context.Context, in *GoMsEntityRequest, opts ...grpc.CallOption) (*GoMsResponse, error) {
	out := new(GoMsResponse)
	err := c.cc.Invoke(ctx, "/go.micro.service.goms.GoMs/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goMsClient) Update(ctx context.Context, in *GoMsEntityRequest, opts ...grpc.CallOption) (*GoMsResponse, error) {
	out := new(GoMsResponse)
	err := c.cc.Invoke(ctx, "/go.micro.service.goms.GoMs/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goMsClient) Delete(ctx context.Context, in *GoMsEntityRequest, opts ...grpc.CallOption) (*GoMsResponse, error) {
	out := new(GoMsResponse)
	err := c.cc.Invoke(ctx, "/go.micro.service.goms.GoMs/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GoMsServer is the server API for GoMs service.
type GoMsServer interface {
	List(context.Context, *empty.Empty) (*GoMsResponse, error)
	Create(context.Context, *empty.Empty) (*GoMsResponse, error)
	Get(context.Context, *GoMsEntityRequest) (*GoMsResponse, error)
	Update(context.Context, *GoMsEntityRequest) (*GoMsResponse, error)
	Delete(context.Context, *GoMsEntityRequest) (*GoMsResponse, error)
}

// UnimplementedGoMsServer can be embedded to have forward compatible implementations.
type UnimplementedGoMsServer struct {
}

func (*UnimplementedGoMsServer) List(ctx context.Context, req *empty.Empty) (*GoMsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedGoMsServer) Create(ctx context.Context, req *empty.Empty) (*GoMsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedGoMsServer) Get(ctx context.Context, req *GoMsEntityRequest) (*GoMsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedGoMsServer) Update(ctx context.Context, req *GoMsEntityRequest) (*GoMsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedGoMsServer) Delete(ctx context.Context, req *GoMsEntityRequest) (*GoMsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterGoMsServer(s *grpc.Server, srv GoMsServer) {
	s.RegisterService(&_GoMs_serviceDesc, srv)
}

func _GoMs_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoMsServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.micro.service.goms.GoMs/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoMsServer).List(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoMs_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoMsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.micro.service.goms.GoMs/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoMsServer).Create(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoMs_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GoMsEntityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoMsServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.micro.service.goms.GoMs/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoMsServer).Get(ctx, req.(*GoMsEntityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoMs_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GoMsEntityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoMsServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.micro.service.goms.GoMs/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoMsServer).Update(ctx, req.(*GoMsEntityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoMs_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GoMsEntityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoMsServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.micro.service.goms.GoMs/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoMsServer).Delete(ctx, req.(*GoMsEntityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GoMs_serviceDesc = grpc.ServiceDesc{
	ServiceName: "go.micro.service.goms.GoMs",
	HandlerType: (*GoMsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _GoMs_List_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _GoMs_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _GoMs_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _GoMs_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _GoMs_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/goms/protobuf/goms.proto",
}
